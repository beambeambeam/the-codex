[tool.coverage.run]
branch = true
source = ["api"]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../coverage/packages/api/html'
 --cov-report xml:'../../coverage/packages/api/coverage.xml'
 --html='../../reports/packages/api/unittests/html/index.html'
 --junitxml='../../reports/packages/api/unittests/junit.xml'
"""

[project]
name = "api"
version = "1.0.0"
description = "Automatically generated by Nx."
requires-python = ">=3.9,<4"
readme = 'README.md'
dependencies = [
  "alembic>=1.16.2",
  "fastapi[standard]>=0.115.13",
  "pgvector>=0.4.1",
  "psycopg[binary]>=3.2.9",
  "python-dotenv>=1.1.0",
  "sqlalchemy>=2.0.41",
  "bcrypt>=4.2.1",
  "pyjwt>=2.10.1",
  "python-multipart>=0.0.20",
  "minio>=7.2.8",
  # RAG & ETR dependencies
  "litellm>=1.70.4",
  "pocketflow>=0.0.2",
  "pgvector>=0.4.1",
  "chonkie>=1.0.8",
  "pymupdf>=1.26.0",
  # Embeddings dependencies
  "sentence-transformers>=4.1.0",
  "model2vec>=0.5.0",
  # Prompts and Templates
  "jinja2>=3.1.0",
  # Logging and Monitoring
  "loguru>=0.7.3",
  # Machine Learning
  "bertopic>=0.17.0",
  "umap-learn>=0.5.9.post2",
  "numpy>=1.26.4",
  "numba>=0.56.4"
]

[tool.hatch.build.targets.wheel]
packages = ["api"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
  "ruff>=0.8.2",
  "autopep8>=2.3.1",
  "pytest>=8.3.4",
  "pytest-sugar>=1.0.0",
  "pytest-cov>=6.0.0",
  "pytest-html>=4.1.1",
]

visualization = ["dash>=2.17.1", "dash-cytoscape>=0.3.0"]

notebook = [
    "datamapplot>=0.6.3",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "matplotlib>=3.9.4",
    "nbformat>=4.2.0",
    "pandas>=2.3.0",
    "scikit-learn>=1.6.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [".ruff_cache", ".svn", ".tox", ".venv", "dist"]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = ["E501"]

fixable = ["ALL"]
unfixable = []

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.params.Depends",
  "fastapi.Query",
  "fastapi.params.Query",
]
